generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid()) // universally unique identifier
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clerkId String @unique
  email   String @unique

  // relationships
  journalEntries JournalEntry[]
}

model JournalEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  content String @db.Text // full-blown database text, not just a varchar

  // relationships
  userId   String
  user     User      @relation(fields: [userId], references: [id])
  analysis Analysis?

  @@unique([id, userId]) // we create a compound unique constraint to find JournalEntries based on the id and the userid
}

model Analysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mood     String
  summary  String  @db.Text
  color    String
  negative Boolean

  journalEntryId String       @unique // can specify even down, with @@unique([...])
  journalEntry   JournalEntry @relation(fields: [journalEntryId], references: [id])
}
